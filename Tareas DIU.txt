		FASE 1 {funcionalidad del proyecto}
---------------------------------------------------------------

GUS aÃ±adir funcion de seleccionar avatar del XML
	- consulta por nickName
	- con el evento de jugar abro crearAvatar y 
	desde alli cargar avatar de XML (solo podria 
	visualizarse mediante una lista de nickNames)

GUS para la solucion de la lectura de XML para los mundos
volver los limites de los mapas, metodos de la clase mundo

ALE(IDEA GUS) implementar colisiones para los enemigos con el avatar



ALE implementar el cambio de mundo cuando llegue al final

ALE terminar limites

ALE implementar en crearAvatar cargar imagen del XML (vista)
GUS implementar en crearAvatar cargar imagen del XML (Control)(leer matrices de XML y cargar en cuadricula de la vista)
GUS implementar en XMLAvatar cargar y leer imagenes predeterminadas por ruta


		FASE 2 {logica de jugabilidad}
---------------------------------------------------------------
ALE tiempo de juego (total de mundos recorridos) 
 
GUS - ALE (SIN DEFINIR)  vidas (3; dependiente de 
las colisiones; hacer que se vuelva al inicio del mapa;
cuando son 3 --> GAME OVER)

GUS - ALE (SIN DEFINIR) puntaje (dependiente de colisiones y cambio de mundos)
	- sumariamos 100 por pasar un mundo
	- al pasar un mundo --> bonus de 50 x cada vida
	-  

GUS - ALE (SIN DEFINIR) PARA EL PASO DE INFORMACION ENTRE MUNDOS (xml O txt):tiempo-vidas-puntaje

GUS - ALE (SIN DEFINIR) XML de Score donde se guarde el historial de ganadores
donde se almacene el nickName, el tiempo jugado, 
el puntaje de cada jugador 

implementar sonidos en el juego


modificar las vistas 
	- acomodar fondos 
	- establecer tamanio de las ventanas
	- label, botones, textfield... misma fuente (Tipo y tamanio)
TODO UNIFORME

ALE - GUS (para el final) guia de controles para el usuario


